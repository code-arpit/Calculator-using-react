{"ast":null,"code":"var _jsxFileName = \"/home/aj/codes/react/calculator/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Button from './components/Button/Button';\nimport ButtonBox from './components/ButtonBox/ButtonBox';\nimport Screen from './components/Screen/Screen';\nimport Wrapper from './components/Wrapper/Wrapper';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst btnValues = [[\"C\", \"+-\", \"%\", \"/\"], [7, 8, 9, \"*\"], [4, 5, 6, \"-\"], [1, 2, 3, \"+\"], [0, \".\", \"=\"]];\n\nconst numClickHandler = e => {\n  e.preventDefault();\n};\n\nconst App = () => {\n  _s();\n\n  let [calc, setCalc] = useState({\n    sign: \"\",\n    num: 0,\n    res: 0\n  });\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: [/*#__PURE__*/_jsxDEV(Screen, {\n      value: calc.num ? calc.num : calc.res\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ButtonBox, {\n      children: btnValues.flat().map((btn, i) => {\n        return /*#__PURE__*/_jsxDEV(Button, {\n          className: btn === \"=\" ? \"equals\" : \"\",\n          value: btn,\n          onClick: btn === \"C\" ? resetClickHandler : btn === \"+-\" ? invertClickHandler : btn === \"%\" ? percentClickHandler : btn === \"=\" ? equalsClickHandler : btn === \"+\" || btn === \"-\" || btn === \"*\" || btn === \"/\" ? signClickHandler : btn === \".\" ? commaClickHandler : numClickHandler\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"i2PL5LfJVl+HiihFBix00qMza9w=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Button","ButtonBox","Screen","Wrapper","btnValues","numClickHandler","e","preventDefault","App","calc","setCalc","sign","num","res","flat","map","btn","i","resetClickHandler","invertClickHandler","percentClickHandler","equalsClickHandler","signClickHandler","commaClickHandler"],"sources":["/home/aj/codes/react/calculator/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Button from './components/Button/Button';\nimport ButtonBox from './components/ButtonBox/ButtonBox';\nimport Screen from './components/Screen/Screen';\nimport Wrapper from './components/Wrapper/Wrapper';\n\n\nconst btnValues = [\n  [\"C\", \"+-\", \"%\", \"/\"],\n  [7, 8, 9, \"*\"],\n  [4, 5, 6, \"-\"],\n  [1, 2, 3, \"+\"],\n  [0, \".\", \"=\"],\n]\n\nconst numClickHandler = (e) => {\n  e.preventDefault();\n}\n\nconst App = () => {\n  let [calc, setCalc] = useState({\n    sign: \"\",\n    num: 0,\n    res: 0,\n  });\n\n  return (\n    <Wrapper>\n      <Screen value={calc.num ? calc.num : calc.res} />\n      <ButtonBox>\n        {\n          btnValues.flat().map((btn, i) => {\n            return (\n              <Button\n                key={i}\n                className={btn === \"=\" ? \"equals\" : \"\"}\n                value={btn}\n                onClick={\n                  btn === \"C\"\n                    ? resetClickHandler\n                    : btn === \"+-\"\n                      ? invertClickHandler\n                      : btn === \"%\"\n                        ? percentClickHandler\n                        : btn === \"=\"\n                          ? equalsClickHandler\n                          : btn === \"+\" || btn === \"-\" || btn === \"*\" || btn === \"/\"\n                            ? signClickHandler\n                            : btn === \".\"\n                              ? commaClickHandler\n                              : numClickHandler\n                }\n              />\n            )\n          }\n          )\n        }\n      </ButtonBox>\n    </Wrapper>\n  )\n}\n\n\nexport default App;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,SAAP,MAAsB,kCAAtB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,OAAP,MAAoB,8BAApB;;AAGA,MAAMC,SAAS,GAAG,CAChB,CAAC,GAAD,EAAM,IAAN,EAAY,GAAZ,EAAiB,GAAjB,CADgB,EAEhB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,GAAV,CAFgB,EAGhB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,GAAV,CAHgB,EAIhB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,GAAV,CAJgB,EAKhB,CAAC,CAAD,EAAI,GAAJ,EAAS,GAAT,CALgB,CAAlB;;AAQA,MAAMC,eAAe,GAAIC,CAAD,IAAO;EAC7BA,CAAC,CAACC,cAAF;AACD,CAFD;;AAIA,MAAMC,GAAG,GAAG,MAAM;EAAA;;EAChB,IAAI,CAACC,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC;IAC7BY,IAAI,EAAE,EADuB;IAE7BC,GAAG,EAAE,CAFwB;IAG7BC,GAAG,EAAE;EAHwB,CAAD,CAA9B;EAMA,oBACE,QAAC,OAAD;IAAA,wBACE,QAAC,MAAD;MAAQ,KAAK,EAAEJ,IAAI,CAACG,GAAL,GAAWH,IAAI,CAACG,GAAhB,GAAsBH,IAAI,CAACI;IAA1C;MAAA;MAAA;MAAA;IAAA,QADF,eAEE,QAAC,SAAD;MAAA,UAEIT,SAAS,CAACU,IAAV,GAAiBC,GAAjB,CAAqB,CAACC,GAAD,EAAMC,CAAN,KAAY;QAC/B,oBACE,QAAC,MAAD;UAEE,SAAS,EAAED,GAAG,KAAK,GAAR,GAAc,QAAd,GAAyB,EAFtC;UAGE,KAAK,EAAEA,GAHT;UAIE,OAAO,EACLA,GAAG,KAAK,GAAR,GACIE,iBADJ,GAEIF,GAAG,KAAK,IAAR,GACEG,kBADF,GAEEH,GAAG,KAAK,GAAR,GACEI,mBADF,GAEEJ,GAAG,KAAK,GAAR,GACEK,kBADF,GAEEL,GAAG,KAAK,GAAR,IAAeA,GAAG,KAAK,GAAvB,IAA8BA,GAAG,KAAK,GAAtC,IAA6CA,GAAG,KAAK,GAArD,GACEM,gBADF,GAEEN,GAAG,KAAK,GAAR,GACEO,iBADF,GAEElB;QAjBlB,GACOY,CADP;UAAA;UAAA;UAAA;QAAA,QADF;MAsBD,CAvBD;IAFJ;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAkCD,CAzCD;;GAAMT,G;;KAAAA,G;AA4CN,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}